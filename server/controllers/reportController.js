
import axios from "axios";
import PDFDocument from "pdfkit";

export const generateReport = async (req, res) => {
  try {
    // Set CORS headers
    res.setHeader('Access-Control-Allow-Origin', 'https://cryptopulse-0kea.onrender.com');
    res.setHeader('Access-Control-Allow-Credentials', 'true');

    const response = await axios.get(
      "https://api.coingecko.com/api/v3/coins/markets",
      {
        params: {
          vs_currency: "usd",
          order: "market_cap_desc",
          per_page: 50,
          page: 1,
          sparkline: false,
        },
        timeout: 10000 // Add timeout to prevent hanging requests
      }
    );

    const coins = response.data;
    const doc = new PDFDocument({ margin: 40, size: "A4" });

    res.setHeader("Content-Type", "application/pdf");
    res.setHeader(
      "Content-Disposition",
      "attachment; filename=crypto_report.pdf"
    );

    doc.pipe(res);

      // Title
    doc
      .fontSize(22)
      .fillColor("#4B0082")
      .text("CryptoPulse Coin Report", { align: "center" });
    doc.moveDown(1);

    // Subtitle
    const now = new Date().toLocaleString();
    doc.fontSize(10).fillColor("gray").text(`Generated on: ${now}`, {
      align: "center",
    });
    doc.moveDown(2);

    // Table headers
    const tableTop = doc.y;
    const itemX = 40,
      symbolX = 150,
      priceX = 250,
      marketCapX = 350,
      changeX = 470;

    doc
      .fontSize(12)
      .fillColor("#000")
      .text("Coin", itemX, tableTop)
      .text("Symbol", symbolX, tableTop)
      .text("Price (USD)", priceX, tableTop)
      .text("Market Cap", marketCapX, tableTop)
      .text("24h Change", changeX, tableTop);

    doc.moveTo(40, tableTop + 15).lineTo(550, tableTop + 15).stroke();

    let y = tableTop + 25;
    coins.forEach((coin, index) => {
      const changePercent = coin.price_change_percentage_24h || 0;
      const changeColor = changePercent >= 0 ? "green" : "red";

      doc
        .fontSize(10)
        .fillColor("black")
        .text(`${index + 1}. ${coin.name}`, itemX, y)
        .text(coin.symbol.toUpperCase(), symbolX, y)
        .text(`$${coin.current_price.toFixed(2)}`, priceX, y)
        .text(`$${coin.market_cap.toLocaleString()}`, marketCapX, y)
        .fillColor(changeColor)
        .text(`${changePercent.toFixed(2)}%`, changeX, y);

      y += 20;
      if (y > 750) {
        doc.addPage();
        y = 40;
      }
    });

    doc
      .fontSize(9)
      .fillColor("gray")
      .text(
        "Generated by CryptoPulse â€¢ Powered by CoinGecko API",
        40,
        780,
        { align: "center", width: 500 }
      );

    doc.end();

  } catch (error) {
    console.error("Error generating PDF:", error);
    // Ensure proper error response with CORS headers
    res.setHeader('Access-Control-Allow-Origin', 'https://cryptopulse-0kea.onrender.com');
    res.setHeader('Access-Control-Allow-Credentials', 'true');
    res.status(500).json({ error: "Failed to generate report" });
  }
};
